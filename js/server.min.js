function getRows(e,o){var r="select * from 'trips' where medallion = '"+e+"'";summary=[],db.serialize(function(){db.each(r,function(e,o){e&&console.log(e),summary.push(o)},function(){console.log(summary.length+" rows found for this medallion"),o(summary)})})}function createGeojson(e,o){featureCollection.features=[];for(var r=0;r<e.length;r++){coordinates=e[r].trippolyline,coordinates2=e[r].nextpolyline,coordinates=polyline.decode(coordinates),coordinates2=polyline.decode(coordinates2);var t={type:"Feature",properties:{},geometry:{type:"LineString",coordinates:[]}},i={type:"Feature",properties:{},geometry:{type:"LineString",coordinates:[]}};t.properties.medallion=e[r].medallion,t.properties.passengers=e[r].passengers,t.properties.fare=e[r].fare,t.properties.paymenttype=e[r].paymenttype,t.properties.surcharge=e[r].surcharge,t.properties.mtatax=e[r].mtatax,t.properties.tip=e[r].tip,t.properties.tolls=e[r].tolls,t.properties.total=e[r].total,t.properties.pickuptime=e[r].pickuptime,t.properties.dropofftime=e[r].dropofftime,t.properties.nextpickuptime=e[r].nextpickuptime,t.properties.key=e[r].key,t.properties.hasfare=!0,i.properties.pickuptime=e[r].dropofftime,i.properties.dropofftime=e[r].nextpickuptime,i.properties.key=e[r].key,i.properties.hasfare=!1;for(var s=0;s<coordinates.length;s++){var p=[coordinates[s][1],coordinates[s][0]];t.geometry.coordinates.push(p)}for(var s=0;s<coordinates2.length;s++){var p=[coordinates2[s][1],coordinates2[s][0]];i.geometry.coordinates.push(p)}featureCollection.features.push(t),featureCollection.features.push(i)}o(featureCollection)}var fs=require("fs"),express=require("express"),app=express(),polyline=require("polyline"),sqlite3=require("sqlite3"),port=process.env.PORT||3e3,db=new sqlite3.Database("db"),summary=[],featureCollection={type:"FeatureCollection",features:[]},router=express.Router();app.use(express.static(__dirname+"/public")),app.all("*",function(e,o,r){o.header("Access-Control-Allow-Origin","*"),o.header("Access-Control-Allow-Headers","X-Requested-With"),r()}),router.get("/trips",function(e,o,r){db.serialize(function(){db.each("select medallion from `trips` order by random() limit 1",function(e,r){console.log("Getting trips for Medallion "+r.medallion),e&&console.log(e),getRows(r.medallion,function(e){createGeojson(e,function(e){console.log("Sending Results"),o.json(e)})})})})}),app.use("/",router),app.listen(port),console.log("Listening on port "+port);